// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  username   String       @unique
  password   String
  fullName   String       @default("")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Avatar     Avatar[]
  VideoJob   VideoJob[]
  VoiceAsset VoiceAsset[]
}

model Avatar {
  id        String     @id @default(cuid())
  userId    String
  prompt    String
  imageUrl  String
  imageKey  String     @default("")
  preferred Boolean    @default(false)
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  VideoJob  VideoJob[]
}

model VideoJob {
  id        String   @id @default(cuid())
  userId    String
  avatarId  String
  script    String
  voiceId   String?
  status    String   @default("completed")
  outputUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  avatar    Avatar   @relation(fields: [avatarId], references: [id])
}

model VoiceAsset {
  id         String   @id @default(cuid())
  userId     String
  text       String
  voiceId    String
  modelId    String   @default("eleven_monolingual_v1")
  stability  Float    @default(0.75)
  similarity Float    @default(0.85)
  audioKey   String
  audioUrl   String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}
